package ${mod.package};

import ${mod.package}.registry.ModBlocks;
import ${mod.package}.registry.ModItems;
import net.fabricmc.api.ModInitializer;
import net.fabricmc.fabric.api.biome.v1.BiomeModifications;
import net.fabricmc.fabric.api.biome.v1.BiomeSelectors;
import net.fabricmc.fabric.api.client.itemgroup.FabricItemGroupBuilder;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.BuiltinRegistries;
import net.minecraft.util.registry.Registry;
import net.minecraft.util.registry.RegistryKey;
import net.minecraft.world.gen.GenerationStep;
import net.minecraft.world.gen.decorator.Decorator;
import net.minecraft.world.gen.decorator.RangeDecoratorConfig;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.YOffset;
import net.minecraft.world.gen.heightprovider.UniformHeightProvider;

public class ${mod.class} implements ModInitializer {
	public static final String MOD_ID = "${mod.mcpath}";
---iter mod.registry.ore.names
	public static ConfiguredFeature<?, ?> ${mod.ore.$%v.uppercased} = Feature.ORE
		.configure(new OreFeatureConfig(
			OreFeatureConfig.Rules.BASE_STONE_OVERWORLD,
			${mod.ore.$%v.vein.block}.getDefaultState(),
			${mod.ore.$%v.vein.size}))
		.decorate(Decorator.RANGE.configure(new RangeDecoratorConfig(
			UniformHeightProvider.create(YOffset.fixed---if mod.ore.$%v.vein.atbedrock
(0)---fi---if mod.ore.$%v.miny
(${mod.ore.$%v.miny})---fi,
			YOffset.fixed(${mod.ore.$%v.maxy})))))
		.spreadHorizontally()
		.repeat(${mod.ore.$%v.vein.perchunk});---end


	public static final ItemGroup ITEM_GROUP = FabricItemGroupBuilder.build(
			new Identifier(MOD_ID, "general"),
			() -> new ItemStack(ModItems.${mod.iconItem}));

	@Override
	public void onInitialize() {
		ModItems.RegisterItems();
		ModBlocks.RegisterBlocks();
---iter mod.registry.ore.names
		RegistryKey<ConfiguredFeature<?, ?>> ${mod.ore.$%v.uppercased}_GEN = RegistryKey.of(Registry.CONFIGURED_FEATURE_KEY,
				new Identifier("${mod.mcpath}", "$%v"));
		Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, ${mod.ore.$%v.uppercased}_GEN.getValue(), ${mod.ore.$%v.uppercased});
		BiomeModifications.addFeature(BiomeSelectors.foundInOverworld(), GenerationStep.Feature.UNDERGROUND_ORES, ${mod.ore.$%v.uppercased}_GEN);---end
	}
}
