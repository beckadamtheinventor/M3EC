package ${mod.package}.registry;

import ${mod.package}.${mod.class};

import net.fabricmc.fabric.api.item.v1.FabricItemSettings;
import net.minecraft.item.ArmorMaterial;
import net.minecraft.item.ToolMaterial;
import net.fabricmc.fabric.api.registry.FuelRegistry;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.entity.EquipmentSlot;
import net.minecraft.item.*;
import net.minecraft.util.Identifier;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;

---iter moditems.imports
	import $%v;---end

public class ModItems {

    //Items
---iter mod.registry.item.names
	public static final Item ${mod.item.$%v.uppercased} = new ${mod.item.$%v.customclass}(new FabricItemSettings()---if mod.item.$%v.extraItemSettings
${mod.item.$%v.extraItemSettings}---fi);---end

	//Food
---iter mod.registry.food.names
	public static final Item ${mod.food.$%v.uppercased} = new FoodItem(new FabricItemSettings().food(new FoodComponent.Builder()
---if mod.food.$%v.hunger
.hunger(${mod.food.$%v.hunger})---fi
---if mod.food.$%v.saturation
.saturationModifier(${mod.food.$%v.saturation})---fi
---if mod.food.$%v.snack
.snack()---fi
---if mod.food.$%v.alwaysEdible
.alwaysEdible()---fi
---if mod.food.$%v.statusEffects
${mod.food.$%v.statusEffects}---fi
.build())
---if mod.food.$%v.returnitem
, ${mod.food.$%v.returnItem}---fi);---end

    //Block Items
---iter mod.registry.blockitem.names
	public static final BlockItem ${mod.blockitem.$%v.uppercased} = new BlockItem(ModBlocks.${mod.blockitem.$%v.uppercased}, new FabricItemSettings());---end

	//Armor materials
---iter mod.registry.armormaterial.names
	public static final ArmorMaterial ${mod.armormaterial.$%v^upper} = new ${mod.armormaterial.$%v.class}();---end

	//Armor items
---iter mod.registry.armor.names
	public static final Item ${mod.armor.$%v.uppercased} = new ArmorItem(${mod.armor.$%v.material^upper}, ArmorItem.Type.${mod.armor.$%v.slot}, new FabricItemSettings());---end


	//Tool items
---iter mod.registry.tool.names
	public static final ToolItem ${mod.tool.$%v.uppercased} = new ${mod.tool.$%v.class}(${mod.tool.$%v.material}.INSTANCE, ${mod.tool.$%v.attackdamage}, ${mod.tool.$%v.attackspeed}, new FabricItemSettings());---end

	//Sapling Items
---iter mod.registry.sapling.names
	public static final BlockItem ${mod.sapling.$%v.uppercased} = new BlockItem(ModBlocks.${mod.sapling.$%v.uppercased}, new FabricItemSettings());---end

---iter moditems.extra
	$%v---end

    public static void RegisterItems() {
---iter mod.registry.item.names
		Registry.register(Registries.ITEM, new Identifier(${mod.class}.MOD_ID, "$%v"), ${mod.item.$%v.uppercased});---end
---iter mod.registry.food.names
		Registry.register(Registries.ITEM, new Identifier(${mod.class}.MOD_ID, "$%v"), ${mod.food.$%v.uppercased});---end
---iter mod.registry.blockitem.names
		Registry.register(Registries.ITEM, new Identifier(${mod.class}.MOD_ID, "$%v"), ${mod.blockitem.$%v.uppercased});---end
---iter mod.registry.fuel.names
		FuelRegistry.INSTANCE.add(${mod.fuel.$%v.uppercased}, ${mod.fuel.$%v.burntime});---end
---iter mod.registry.armor.names
		Registry.register(Registries.ITEM, new Identifier(${mod.class}.MOD_ID, "$%v"), ${mod.armor.$%v.uppercased});---end
---iter mod.registry.tool.names
		Registry.register(Registries.ITEM, new Identifier(${mod.class}.MOD_ID, "$%v"), ${mod.tool.$%v.uppercased});---end
---iter mod.registry.sapling.names
		Registry.register(Registries.ITEM, new Identifier(${mod.class}.MOD_ID, "$%v"), ${mod.sapling.$%v.uppercased});---end

---iter moditems.registeritems.extra
		$%v---end
    }

}